//
// Copyright 2020 Swiftkube Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

///
/// Generated by Swiftkube:ModelGen
/// Kubernetes v1.28.3
///

import Foundation

public extension GroupVersionKind {

	/// Creates a new instance of `GroupVersionKind` for the provided resource name.
	///
	/// A resource name can be:
	/// - Lower-cased singular resource kind
	/// - Lower-cased plural resource name
	/// - Lower-cased short resource name
	///
	/// ```swift
	/// let gvk = GroupVersionKind(for: "deployment")
	/// let gvk = GroupVersionKind(for: "deployments")
	/// let gvk = GroupVersionKind(for: "deploy")
	/// ```
	///
	/// - Parameter resourceName: The resource plural or singular name or its kind.
	init?(for resourceName: String) {
		if let gvk = GroupVersionKind.tryKind(resourceName) {
			self = gvk
		} else if let gvk = GroupVersionKind.tryPlural(resourceName) {
			self = gvk
		} else if let gvk = GroupVersionKind.tryShort(resourceName) {
			self = gvk
		} else {
			return nil
		}
	}

	private static func tryKind(_ kind: String) -> GroupVersionKind? {
		switch kind.lowercased() {

		case "binding":
			return GroupVersionKind.coreV1Binding
		case "componentstatus":
			return GroupVersionKind.coreV1ComponentStatus
		case "configmap":
			return GroupVersionKind.coreV1ConfigMap
		case "endpoints":
			return GroupVersionKind.coreV1Endpoints
		case "event":
			return GroupVersionKind.coreV1Event
		case "limitrange":
			return GroupVersionKind.coreV1LimitRange
		case "namespace":
			return GroupVersionKind.coreV1Namespace
		case "node":
			return GroupVersionKind.coreV1Node
		case "persistentvolume":
			return GroupVersionKind.coreV1PersistentVolume
		case "persistentvolumeclaim":
			return GroupVersionKind.coreV1PersistentVolumeClaim
		case "pod":
			return GroupVersionKind.coreV1Pod
		case "podtemplate":
			return GroupVersionKind.coreV1PodTemplate
		case "replicationcontroller":
			return GroupVersionKind.coreV1ReplicationController
		case "resourcequota":
			return GroupVersionKind.coreV1ResourceQuota
		case "secret":
			return GroupVersionKind.coreV1Secret
		case "service":
			return GroupVersionKind.coreV1Service
		case "serviceaccount":
			return GroupVersionKind.coreV1ServiceAccount
		case "mutatingwebhookconfiguration":
			return GroupVersionKind.admissionregistrationV1MutatingWebhookConfiguration
		case "validatingwebhookconfiguration":
			return GroupVersionKind.admissionregistrationV1ValidatingWebhookConfiguration
		case "validatingadmissionpolicy":
			return GroupVersionKind.admissionregistrationV1Beta1ValidatingAdmissionPolicy
		case "validatingadmissionpolicybinding":
			return GroupVersionKind.admissionregistrationV1Beta1ValidatingAdmissionPolicyBinding
		case "customresourcedefinition":
			return GroupVersionKind.apiextensionsV1CustomResourceDefinition
		case "apiservice":
			return GroupVersionKind.apiregistrationV1APIService
		case "controllerrevision":
			return GroupVersionKind.appsV1ControllerRevision
		case "daemonset":
			return GroupVersionKind.appsV1DaemonSet
		case "deployment":
			return GroupVersionKind.appsV1Deployment
		case "replicaset":
			return GroupVersionKind.appsV1ReplicaSet
		case "statefulset":
			return GroupVersionKind.appsV1StatefulSet
		case "selfsubjectreview":
			return GroupVersionKind.authenticationV1SelfSubjectReview
		case "tokenrequest":
			return GroupVersionKind.authenticationV1TokenRequest
		case "tokenreview":
			return GroupVersionKind.authenticationV1TokenReview
		case "localsubjectaccessreview":
			return GroupVersionKind.authorizationV1LocalSubjectAccessReview
		case "selfsubjectaccessreview":
			return GroupVersionKind.authorizationV1SelfSubjectAccessReview
		case "selfsubjectrulesreview":
			return GroupVersionKind.authorizationV1SelfSubjectRulesReview
		case "subjectaccessreview":
			return GroupVersionKind.authorizationV1SubjectAccessReview
		case "horizontalpodautoscaler":
			return GroupVersionKind.autoscalingV1HorizontalPodAutoscaler
		case "cronjob":
			return GroupVersionKind.batchV1CronJob
		case "job":
			return GroupVersionKind.batchV1Job
		case "certificatesigningrequest":
			return GroupVersionKind.certificatesV1CertificateSigningRequest
		case "clustertrustbundle":
			return GroupVersionKind.certificatesV1Alpha1ClusterTrustBundle
		case "lease":
			return GroupVersionKind.coordinationV1Lease
		case "endpointslice":
			return GroupVersionKind.discoveryV1EndpointSlice
		case "flowschema":
			return GroupVersionKind.flowcontrolV1Beta3FlowSchema
		case "prioritylevelconfiguration":
			return GroupVersionKind.flowcontrolV1Beta3PriorityLevelConfiguration
		case "storageversion":
			return GroupVersionKind.internalV1Alpha1StorageVersion
		case "ingress":
			return GroupVersionKind.networkingV1Ingress
		case "ingressclass":
			return GroupVersionKind.networkingV1IngressClass
		case "networkpolicy":
			return GroupVersionKind.networkingV1NetworkPolicy
		case "clustercidr":
			return GroupVersionKind.networkingV1Alpha1ClusterCIDR
		case "ipaddress":
			return GroupVersionKind.networkingV1Alpha1IPAddress
		case "runtimeclass":
			return GroupVersionKind.nodeV1RuntimeClass
		case "poddisruptionbudget":
			return GroupVersionKind.policyV1PodDisruptionBudget
		case "clusterrole":
			return GroupVersionKind.rbacV1ClusterRole
		case "clusterrolebinding":
			return GroupVersionKind.rbacV1ClusterRoleBinding
		case "role":
			return GroupVersionKind.rbacV1Role
		case "rolebinding":
			return GroupVersionKind.rbacV1RoleBinding
		case "podschedulingcontext":
			return GroupVersionKind.resourceV1Alpha2PodSchedulingContext
		case "resourceclaim":
			return GroupVersionKind.resourceV1Alpha2ResourceClaim
		case "resourceclaimtemplate":
			return GroupVersionKind.resourceV1Alpha2ResourceClaimTemplate
		case "resourceclass":
			return GroupVersionKind.resourceV1Alpha2ResourceClass
		case "priorityclass":
			return GroupVersionKind.schedulingV1PriorityClass
		case "csidriver":
			return GroupVersionKind.storageV1CSIDriver
		case "csinode":
			return GroupVersionKind.storageV1CSINode
		case "csistoragecapacity":
			return GroupVersionKind.storageV1CSIStorageCapacity
		case "storageclass":
			return GroupVersionKind.storageV1StorageClass
		case "volumeattachment":
			return GroupVersionKind.storageV1VolumeAttachment
		default:
			return nil
		}
	}

	private static func tryPlural(_ plural: String) -> GroupVersionKind? {
		switch plural {

		case "bindings":
			return GroupVersionKind.coreV1Binding
		case "componentstatuses":
			return GroupVersionKind.coreV1ComponentStatus
		case "configmaps":
			return GroupVersionKind.coreV1ConfigMap
		case "endpoints":
			return GroupVersionKind.coreV1Endpoints
		case "events":
			return GroupVersionKind.coreV1Event
		case "limitranges":
			return GroupVersionKind.coreV1LimitRange
		case "namespaces":
			return GroupVersionKind.coreV1Namespace
		case "nodes":
			return GroupVersionKind.coreV1Node
		case "persistentvolumes":
			return GroupVersionKind.coreV1PersistentVolume
		case "persistentvolumeclaims":
			return GroupVersionKind.coreV1PersistentVolumeClaim
		case "pods":
			return GroupVersionKind.coreV1Pod
		case "podtemplates":
			return GroupVersionKind.coreV1PodTemplate
		case "replicationcontrollers":
			return GroupVersionKind.coreV1ReplicationController
		case "resourcequotas":
			return GroupVersionKind.coreV1ResourceQuota
		case "secrets":
			return GroupVersionKind.coreV1Secret
		case "services":
			return GroupVersionKind.coreV1Service
		case "serviceaccounts":
			return GroupVersionKind.coreV1ServiceAccount
		case "mutatingwebhookconfigurations":
			return GroupVersionKind.admissionregistrationV1MutatingWebhookConfiguration
		case "validatingwebhookconfigurations":
			return GroupVersionKind.admissionregistrationV1ValidatingWebhookConfiguration
		case "validatingadmissionpolicies":
			return GroupVersionKind.admissionregistrationV1Beta1ValidatingAdmissionPolicy
		case "validatingadmissionpolicybindings":
			return GroupVersionKind.admissionregistrationV1Beta1ValidatingAdmissionPolicyBinding
		case "customresourcedefinitions":
			return GroupVersionKind.apiextensionsV1CustomResourceDefinition
		case "apiservices":
			return GroupVersionKind.apiregistrationV1APIService
		case "controllerrevisions":
			return GroupVersionKind.appsV1ControllerRevision
		case "daemonsets":
			return GroupVersionKind.appsV1DaemonSet
		case "deployments":
			return GroupVersionKind.appsV1Deployment
		case "replicasets":
			return GroupVersionKind.appsV1ReplicaSet
		case "statefulsets":
			return GroupVersionKind.appsV1StatefulSet
		case "selfsubjectreviews":
			return GroupVersionKind.authenticationV1SelfSubjectReview
		case "tokenrequests":
			return GroupVersionKind.authenticationV1TokenRequest
		case "tokenreviews":
			return GroupVersionKind.authenticationV1TokenReview
		case "localsubjectaccessreviews":
			return GroupVersionKind.authorizationV1LocalSubjectAccessReview
		case "selfsubjectaccessreviews":
			return GroupVersionKind.authorizationV1SelfSubjectAccessReview
		case "selfsubjectrulesreviews":
			return GroupVersionKind.authorizationV1SelfSubjectRulesReview
		case "subjectaccessreviews":
			return GroupVersionKind.authorizationV1SubjectAccessReview
		case "horizontalpodautoscalers":
			return GroupVersionKind.autoscalingV1HorizontalPodAutoscaler
		case "cronjobs":
			return GroupVersionKind.batchV1CronJob
		case "jobs":
			return GroupVersionKind.batchV1Job
		case "certificatesigningrequests":
			return GroupVersionKind.certificatesV1CertificateSigningRequest
		case "clustertrusubundles":
			return GroupVersionKind.certificatesV1Alpha1ClusterTrustBundle
		case "leases":
			return GroupVersionKind.coordinationV1Lease
		case "endpointslices":
			return GroupVersionKind.discoveryV1EndpointSlice
		case "flowschemas":
			return GroupVersionKind.flowcontrolV1Beta3FlowSchema
		case "prioritylevelconfigurations":
			return GroupVersionKind.flowcontrolV1Beta3PriorityLevelConfiguration
		case "storageversions":
			return GroupVersionKind.internalV1Alpha1StorageVersion
		case "ingresses":
			return GroupVersionKind.networkingV1Ingress
		case "ingressclasses":
			return GroupVersionKind.networkingV1IngressClass
		case "networkpolicies":
			return GroupVersionKind.networkingV1NetworkPolicy
		case "clustercidrs":
			return GroupVersionKind.networkingV1Alpha1ClusterCIDR
		case "ipaddresses":
			return GroupVersionKind.networkingV1Alpha1IPAddress
		case "runtimeclasses":
			return GroupVersionKind.nodeV1RuntimeClass
		case "poddisruptionbudgets":
			return GroupVersionKind.policyV1PodDisruptionBudget
		case "clusterroles":
			return GroupVersionKind.rbacV1ClusterRole
		case "clusterrolebindings":
			return GroupVersionKind.rbacV1ClusterRoleBinding
		case "roles":
			return GroupVersionKind.rbacV1Role
		case "rolebindings":
			return GroupVersionKind.rbacV1RoleBinding
		case "podschedulingcontexts":
			return GroupVersionKind.resourceV1Alpha2PodSchedulingContext
		case "resourceclaims":
			return GroupVersionKind.resourceV1Alpha2ResourceClaim
		case "resourceclaimtemplates":
			return GroupVersionKind.resourceV1Alpha2ResourceClaimTemplate
		case "resourceclasses":
			return GroupVersionKind.resourceV1Alpha2ResourceClass
		case "priorityclasses":
			return GroupVersionKind.schedulingV1PriorityClass
		case "csidrivers":
			return GroupVersionKind.storageV1CSIDriver
		case "csinodes":
			return GroupVersionKind.storageV1CSINode
		case "csistoragecapacities":
			return GroupVersionKind.storageV1CSIStorageCapacity
		case "storageclasses":
			return GroupVersionKind.storageV1StorageClass
		case "volumeattachments":
			return GroupVersionKind.storageV1VolumeAttachment
		default:
			return nil
		}
	}

	private static func tryShort(_ short: String) -> GroupVersionKind? {
		switch short {

		case "cs":
			return GroupVersionKind.coreV1ComponentStatus
		case "cm":
			return GroupVersionKind.coreV1ConfigMap
		case "ep":
			return GroupVersionKind.coreV1Endpoints
		case "ev":
			return GroupVersionKind.coreV1Event
		case "limits":
			return GroupVersionKind.coreV1LimitRange
		case "ns":
			return GroupVersionKind.coreV1Namespace
		case "no":
			return GroupVersionKind.coreV1Node
		case "pv":
			return GroupVersionKind.coreV1PersistentVolume
		case "pvc":
			return GroupVersionKind.coreV1PersistentVolumeClaim
		case "po":
			return GroupVersionKind.coreV1Pod
		case "rc":
			return GroupVersionKind.coreV1ReplicationController
		case "quota":
			return GroupVersionKind.coreV1ResourceQuota
		case "svc":
			return GroupVersionKind.coreV1Service
		case "sa":
			return GroupVersionKind.coreV1ServiceAccount
		case "crd":
			return GroupVersionKind.apiextensionsV1CustomResourceDefinition
		case "ds":
			return GroupVersionKind.appsV1DaemonSet
		case "deploy":
			return GroupVersionKind.appsV1Deployment
		case "rs":
			return GroupVersionKind.appsV1ReplicaSet
		case "sts":
			return GroupVersionKind.appsV1StatefulSet
		case "hpa":
			return GroupVersionKind.autoscalingV1HorizontalPodAutoscaler
		case "cj":
			return GroupVersionKind.batchV1CronJob
		case "csr":
			return GroupVersionKind.certificatesV1CertificateSigningRequest
		case "ing":
			return GroupVersionKind.networkingV1Ingress
		case "netpol":
			return GroupVersionKind.networkingV1NetworkPolicy
		case "pdb":
			return GroupVersionKind.policyV1PodDisruptionBudget
		case "pc":
			return GroupVersionKind.schedulingV1PriorityClass
		case "sc":
			return GroupVersionKind.storageV1StorageClass
		default:
			return nil
		}
	}
}
